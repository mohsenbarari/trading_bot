services:
  app:
    build: .
    container_name: trading_bot_app
    restart: always
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      migration:
        condition: service_completed_successfully
    networks:
      - trading_net

  bot:
    build: .
    container_name: trading_bot_bot
    restart: always
    command: python run_bot.py
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      migration:
        condition: service_completed_successfully
    networks:
      - trading_net

  migration:
    build: .
    container_name: trading_bot_migration

    command: ["python", "-c", "import manage; manage.main()"]
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - trading_net

  db:
    image: postgres:15-alpine
    container_name: trading_bot_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - trading_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  trading_net:
    driver: bridge

volumes:
  postgres_data: